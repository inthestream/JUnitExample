//문제
public class TestObjectSpace {
  private Ruby runtime;
  private ObjectSpace objectSpace;

  @Before
  public void setUp() throws Exception {
    runtime = Ruby.newInstance();
    objectSpace = new ObjectSpace();
  }


  @Test
  public void testObjectSpace() {
    IRubyObject o1 = runtime.newFixnum(10);
    IRubyObject o2 = runtime.newFixnum(20);
    IRubyObject o3 = runtime.newFixnum(30);
    IRubyObject o4 = runtime.newString("hello");

    objectSpace.add(o1);
    objectSpace.add(o2);
    objectSpace.add(o3);
    objectSpace.add(o4);

    List storedFixnums = new ArrayList(3);
    storedFixnums.add(o1);
    storedFixnums.add(o2);
    storedFixnums.add(o3);

    Iterator strings = objectSpace.iterator(rumtime.getString());

    assertSame(o4, strings.next());
    assertNull(strings.next());

    Iterator numerics = objectSpace.iterator(runtime.getNumeric());

    for(int i = 0; i < 3; i++) {
      Object item = numerics.next();
      assertTrue(storedFixnums.contains(item));
    }

    assertNull(numerics.next());
  }
}

//개선
public class TestObjectSpace {

  private Ruby runtime;
  private ObjectSpace space;
  private IRubyObject string;
  private List<IRubyObject> fixnums;

  @Before // 셋업 메서드에서 픽스처를 생성한다.
  public void setUp() throws Exception {
    runtime = Ruby.newInstance();
    space = new ObjectSpace();

    string = runtime.newString("hello");
    fixnums = new ArrayList<IRubyObject>() {{
      add(runtime.newFixnum(10));
      add(runtime.newFixnum(20));
      add(runtime.newFixnum(30));
    }}
  }

  @Test
  public void testObjectSpace() {
    addTo(space, string);
    addTo(space, fixnums);

    Iterator strings = space.iterator(runtime.getString());
    assertContainsExactly(strings, string);

    Iterator numerics = space.iterator(runtime.getNumeric());
    assertContainsExactly(numerics, fixnums);
  }

  private void addTo(ObjectSpace space, Object... values) {}
  private void addTo(ObjectSpace, List values) {}

  private void assertContainsExactly(Iterator i, Object... values) {}
  private void assertContainsExactly(Iterator i, List values) {}
}
